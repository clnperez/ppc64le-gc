##
# This Dockerfile builds an ubuntu:trusty image with upstream golang
# Usage: docker build -t ppc64_gc --no-cache=true -f Dockerfile.latest .
# 
# To test aginst docker:
# 1.) build this
# 2.) navigate to docker repo, replace the FROM line in Docker.ppc64le dockerfile with this
# 3.) build the Dockerfile.ppc64le image as docker-upstream-golang
#	docker build -t docker-upstream-golang -f Dockerfile.ppc64le .
# 4.) run the tests 
# 	docker run --privileged -it -v `pwd`:/go/src/github.com/docker/docker docker-go ./hack/make.sh binary test-integration-cli
# Then 

FROM ppc64le/ubuntu:trusty

RUN apt-get update && apt-get -y install git gcc curl bzip2

# Pull upstream go and use the provided bootstrap to build it
COPY go-linux-ppc64le-bootstrap.tbz /tmp
RUN tar -C /tmp -xvf /tmp/go-linux-ppc64le-bootstrap.tbz
ENV GOROOT_BOOTSTRAP /tmp/go-linux-ppc64le-bootstrap

RUN cd /usr/local \
        && git clone --no-checkout https://go.googlesource.com/go \
        && cd go && git checkout master && cd src \
        && ./make.bash 2>&1

RUN rm -rf /tmp/go-linux-ppc64le-bootstrap*

ENV PATH /usr/local/go/bin/:$PATH
ENV GOPATH /go
